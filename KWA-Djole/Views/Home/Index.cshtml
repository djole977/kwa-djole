@model KWA_Djole.Business.Dtos.HomeDto
@using KWA_Djole.Data.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject KWA_Djole.Business.Interfaces.IShoppingService shoppingService
@{
    ViewData["Title"] = "Home Page";
    var isAuth = User.Identity.IsAuthenticated;
    var cartItems = 0;
}
@if (isAuth)
{
    var user = await UserManager.GetUserAsync(User);
    <div class="display-4">Dobrodošao/la @user.FirstName</div>
    cartItems = await shoppingService.GetCustomerCartCount(user.Id);
}
else
{
    <div class="display-4">Dobrodošli</div>
}
<div class="card col-12 collapsed-card mt-2">
    <div class="card-header">
        <h3 class="card-title">Pretraga</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-plus"></i></button>
        </div>
    </div>
    <div class="card-body">
        <div class="d-flex flex-column align-items-center">
            <div class="d-flex flex-row align-items-center col-12">
                <h5 class="mb-0">Ime: </h5>
                <input type="text" class="form-control col-2 ml-2" id="nameFilter" />
                <h5 class="ml-4 mb-0">Žanrovi: </h5>
                <div class="col-2">
                    <select id="genreSelect" class="form-select js-example-placeholder-multiple js-states form-control ml-4" style="width: 100%" multiple>
                        <option></option>
                        @foreach (var item in Model.Genres)
                        {
                            <option data-id="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
                @* <h5 class="ml-4">Opseg cene: </h5> *@
                <div style="width: 550px; margin-left: 60px">
                    <input type="text" class="js-range-slider" id="priceSlider" name="my_range" value="" />
                </div>
            </div>
            <div class="d-flex flex-row col-12 align-items-center">
                <h5 class="mb-0">Broj stranica: </h5>
                <div style="width: 150px; margin-left: 60px">
                    <input type="text" class="js-range-slider" id="pagesSlider" name="my_range" value="" />
                </div>
            </div>
            <div class="col-12 d-flex flex-row mt-4 gap-4">
                <button class="btn btn-primary" onclick="GetItemsFiltered('@User.Identity.IsAuthenticated')">Primeni</button>
                <button class="btn btn-secondary" onclick="ClearFilters()">Poništi</button>
            </div>
        </div>
    </div>
</div>
<div class="col-12 d-flex justify-content-start flex-row flex-wrap mt-2" style="column-gap: 20px; row-gap: 20px" id="comicsDiv">
    @foreach (var item in Model.ShoppingItems)
    {
        @await Html.PartialAsync("_ShoppingItem", item)
    }
</div>
<input type="hidden" value="@cartItems" id="cartItemCount" />
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.js-example-placeholder-multiple').select2({
                placeholder: "Izaberite žanrove",
                allowClear: true,
                theme: 'classic'
            });
            $('.select2-search__field').css('width', '100%');
            $("#priceSlider").ionRangeSlider({
                type: "double",
                min: 0,
                max: 10000,
                from: 0,
                to: 10000,
                grid: true,
                postfix: " RSD",
                skin: 'round'
            });
            $("#pagesSlider").ionRangeSlider({
                type: "double",
                min: 0,
                max: 1000,
                from: 0,
                to: 1000,
                grid: true,
                postfix: " strana",
                skin: 'round'
            });
        });
        function GoToProductDetails(id) {
            window.location.href = "/Home/ProductDetails/" + id;
        }
        function GetItemsFiltered(isAuthenticated) {
            var cartText = '';
            var cartClass = '';
            if (isAuthenticated === 'True') {
                cartText = 'Dodaj u korpu';
            }
            else {
                cartText = 'Prijavi se';
            }
            if (isAuthenticated === 'True') { 
                cartClass = 'btn-success';
            }
            else {
                cartClass = 'btn-secondary';
            }
            var filter = {}
            filter.Name = $('#nameFilter').val();
            let selectedDataIds = [];

            $('#genreSelect option:selected').each(function () {
                let dataId = $(this).data('id');
                selectedDataIds.push(dataId);
            });
            filter.GenresId = selectedDataIds

            var range = $("#priceSlider").data("ionRangeSlider");
            var priceFrom = parseInt(range.old_from)
            var priceTo = range.old_to

            var pageRange = $("#pagesSlider").data("ionRangeSlider");
            var pagesFrom = parseInt(pageRange.old_from)
            var pagesTo = pageRange.old_to

            filter.MinPrice = priceFrom
            filter.MaxPrice = priceTo
            filter.MinPages = pagesFrom
            filter.MaxPages = pagesTo

            $.ajax({
                url: '/Home/GetShoppingItemsFiltered',
                type: 'POST',
                data: {
                    filter: filter
                },
                success: function (data) {
                    $('#comicsDiv').empty();
                    data.$values.forEach(item => {
                        var onclickAction = '';
                        var jsDate = new Date(item.issueDate);
                        var issueDate = formatDateToDDMMYYYY(jsDate)
                        var price = formatNumber(item.price)
                        if (isAuthenticated === 'True') {
                            onclickAction = `AddProductToCart(${item.id})`;
                        }
                        else {
                            onclickAction = 'GoToLogin()';
                        }
                        
                        var newItemHtml = `
                        <div class="card" style="width: 300px"><div class="card-body col-12 d-flex justify-content-center flex-column align-items-center pt-0" style="min-height: 700px">
                            <div class="col-12 d-flex justify-content-center flex-column align-items-center position-absolute" style="top: 0px">
                            <img src="${item.imageUrl}" style="width: 300px; height: 440px" />
                            <h5 style="font-size: 26px;" class="mt-1">${item.name}</h5>
                            <hr class="hr w-100 mt-1 mb-1" style="color: #ebebeb" />
                            <h6 class="mt-2">Izdavač: ${item.issuer}</h5>
                            <h6>Datum izdavanja: ${issueDate}</h5>
                            <h6>Žanr: ${item.shoppingItemGenre.name}</h5>
                            <div class="d-flex flex-row justify-content-center align-items-center mt-1">
                                <i class="fas fa-book"></i>
                                <h6 class="mb-0 ml-2">${item.numOfPages} stranica</h5>
                            </div>
                        </div>
                            <div class="d-flex flex-row justify-content-between align-items-center w-100 position-absolute pl-2 pr-2" style="bottom: 15px;">
                                <button class="btn btn-primary" onclick="GoToProductDetails(${item.id})">Detalji</button>
                                <div class="d-flex flex-row align-items-center">
                                    <h5 class="card-text mb-0 mr-2">${price} RSD</h5>
                                    <button data-bs-toggle="tooltip" data-bs-placement="top"
                                        title="${cartText}"
                                        class="btn ${cartClass}"
                                        onclick="${onclickAction}">
                                        <i class="fas fa-cart-shopping"></i>
                                    </button>
                                </div>
                            </div>
                                }
                            </div>
                        </div>`;
                        $('#comicsDiv').append(newItemHtml);
                    });
                }
            });
            //Bootstrap code - initialize all tooltips on the page
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        }
        function ClearFilters() {
            $('#nameFilter').val('');
            $('#genreSelect').val(null).trigger('change');
            var range = $("#priceSlider").data("ionRangeSlider");
            range.update({
                from: 0,
                to: 10000
            });
            var range2 = $("#pagesSlider").data("ionRangeSlider");
            range2.update({
                from: 0,
                to: 1000
            });
            GetItemsFiltered('@User.Identity.IsAuthenticated');
        }
    </script>
}